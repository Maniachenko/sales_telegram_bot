{"ast":null,"code":"var _jsxFileName = \"/home/alexm/PycharmProjects/sales_bot/frontend/sales-bot-admin/src/components/PdfTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport EditModal from './EditModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PdfTable = ({\n  pdfs,\n  refreshPdfs\n}) => {\n  _s();\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [selectedPdf, setSelectedPdf] = useState(null);\n  const handleEdit = pdf => {\n    setSelectedPdf(pdf);\n    setEditModalOpen(true);\n  };\n  const handleUpdate = updatedPdf => {\n    const formData = new FormData();\n    formData.append('shop_name', updatedPdf.shop_name);\n    formData.append('valid_from', updatedPdf.valid_from);\n    formData.append('valid_to', updatedPdf.valid_to);\n    if (updatedPdf.file) {\n      formData.append('file', updatedPdf.file);\n    }\n    axios.post(`http://127.0.0.1:5000/update/${updatedPdf.filename}`, formData).then(response => {\n      console.log(response.data);\n      setEditModalOpen(false);\n      refreshPdfs();\n    }).catch(error => {\n      console.error('Error updating file:', error);\n    });\n  };\n  const sortedPdfs = pdfs.sort((a, b) => new Date(b.valid_to) - new Date(a.valid_to));\n  const isNearExpiry = validToDate => {\n    const today = new Date();\n    const validTo = new Date(validToDate);\n    const timeDiff = validTo - today;\n    const daysDiff = timeDiff / (1000 * 3600 * 24);\n    return daysDiff <= 2;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"wider-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Shop Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Valid From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Valid To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Upload Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sortedPdfs.map((pdf, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: isNearExpiry(pdf.valid_to) ? 'near-expiry' : '',\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: pdf.shop_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `http://127.0.0.1:5000/uploads/${pdf.filename}`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: pdf.filename\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: pdf.valid_from\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: pdf.valid_to\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: pdf.upload_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(pdf),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), editModalOpen && /*#__PURE__*/_jsxDEV(EditModal, {\n      pdf: selectedPdf,\n      onClose: () => setEditModalOpen(false),\n      onSave: handleUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(PdfTable, \"NPFhu/tCUPLt7KuNDeeJoyX4BCs=\");\n_c = PdfTable;\nexport default PdfTable;\nvar _c;\n$RefreshReg$(_c, \"PdfTable\");","map":{"version":3,"names":["React","useState","axios","EditModal","jsxDEV","_jsxDEV","PdfTable","pdfs","refreshPdfs","_s","editModalOpen","setEditModalOpen","selectedPdf","setSelectedPdf","handleEdit","pdf","handleUpdate","updatedPdf","formData","FormData","append","shop_name","valid_from","valid_to","file","post","filename","then","response","console","log","data","catch","error","sortedPdfs","sort","a","b","Date","isNearExpiry","validToDate","today","validTo","timeDiff","daysDiff","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","index","href","target","rel","upload_date","onClick","onClose","onSave","_c","$RefreshReg$"],"sources":["/home/alexm/PycharmProjects/sales_bot/frontend/sales-bot-admin/src/components/PdfTable.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport EditModal from './EditModal';\n\nconst PdfTable = ({ pdfs, refreshPdfs }) => {\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [selectedPdf, setSelectedPdf] = useState(null);\n\n  const handleEdit = (pdf) => {\n    setSelectedPdf(pdf);\n    setEditModalOpen(true);\n  };\n\n  const handleUpdate = (updatedPdf) => {\n    const formData = new FormData();\n    formData.append('shop_name', updatedPdf.shop_name);\n    formData.append('valid_from', updatedPdf.valid_from);\n    formData.append('valid_to', updatedPdf.valid_to);\n    if (updatedPdf.file) {\n      formData.append('file', updatedPdf.file);\n    }\n\n    axios.post(`http://127.0.0.1:5000/update/${updatedPdf.filename}`, formData)\n      .then(response => {\n        console.log(response.data);\n        setEditModalOpen(false);\n        refreshPdfs();\n      })\n      .catch(error => {\n        console.error('Error updating file:', error);\n      });\n  };\n\n  const sortedPdfs = pdfs.sort((a, b) => new Date(b.valid_to) - new Date(a.valid_to));\n\n  const isNearExpiry = (validToDate) => {\n    const today = new Date();\n    const validTo = new Date(validToDate);\n    const timeDiff = validTo - today;\n    const daysDiff = timeDiff / (1000 * 3600 * 24);\n    return daysDiff <= 2;\n  };\n\n  return (\n    <div>\n      <table className=\"wider-table\">\n        <thead>\n          <tr>\n            <th>Shop Name</th>\n            <th>File</th>\n            <th>Valid From</th>\n            <th>Valid To</th>\n            <th>Upload Date</th>\n            <th>Edit</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sortedPdfs.map((pdf, index) => (\n            <tr key={index} className={isNearExpiry(pdf.valid_to) ? 'near-expiry' : ''}>\n              <td>{pdf.shop_name}</td>\n              <td><a href={`http://127.0.0.1:5000/uploads/${pdf.filename}`} target=\"_blank\" rel=\"noopener noreferrer\">{pdf.filename}</a></td>\n              <td>{pdf.valid_from}</td>\n              <td>{pdf.valid_to}</td>\n              <td>{pdf.upload_date}</td>\n              <td><button onClick={() => handleEdit(pdf)}>Edit</button></td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {editModalOpen && (\n        <EditModal\n          pdf={selectedPdf}\n          onClose={() => setEditModalOpen(false)}\n          onSave={handleUpdate}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default PdfTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}